#include <iostream>
#include <string>
using namespace std;
struct IceCream { //structure with the main information
	string IceCreamName;
	string IceCreamFlavour;
	string IceCreamColour;
	float IceCreamCost = 0;
	int id = 1;
};
int getIndexById(IceCream* creams, int& IceCreamCount, int id) //function for Index
{
	for (int j = 0; j < IceCreamCount; j++)
	{
		if (creams[j].id == id)
		{
			return j;
		}
	}
	return -1;
}
void createIceCream(IceCream* creams, int& IceCreamCount, int& mID, IceCream newIceCream) //A function used for adding things in the menu
{
	newIceCream.id = mID++;
	creams[IceCreamCount] = newIceCream;
	IceCreamCount++;
}
void updateIceCreamInfo(IceCream* creams, int IceCreamCount, int id, IceCream newIceCream) //A function used for changing information about things added to the menu
{
	int ind = getIndexById(creams, IceCreamCount, id);
	creams[ind] = newIceCream;
}
void deleteIceCream(IceCream* creams, int& IceCreamCount, int id) //A function used for removing things added to the menu
{
	int ind = getIndexById(creams, IceCreamCount, id);
	for (int j = ind; j < IceCreamCount - 1; j++)
	{
		creams[j] = creams[j + 1];
	}
	IceCreamCount--;
}
IceCream getIceCream(IceCream* creams, int& IceCreamCount, int id)
{
	int ind = getIndexById(creams, IceCreamCount, id);
	return creams[ind];
}
void createCreamMenu(IceCream* creams, int& IceCreamCount, int& mID)// The most important function in this particular program
{
	IceCream IceCream; //filling the structure with information
	cout << "Choose Ice Cream Name : "; //adding the name
	cin >> IceCream.IceCreamName;
	cout << "Choose the IceCream's Flavour :  "; //adding the flavour
	cin >> IceCream.IceCreamFlavour;
	cout << "Choose colour : "; //adding the colour 
	cin >> IceCream.IceCreamColour;
	cout << "Choose cost : "; //adding the cost
	cin >> IceCream.IceCreamCost;
	createIceCream(creams, IceCreamCount, mID, IceCream);
}
void showCreamMenu(IceCream* creams, int& IceCreamCount, int& mID) // The function which shows all the added things to the menu
{
	cout << "Here are all the available Ice Creams so far : " << endl;

	for (int j = 0; j < IceCreamCount; j++)
	{
		cout << "ID : ";
		cout << creams[j].id << "IceCreamFlavour : " << creams[j].IceCreamFlavour << "Name : " << creams[j].IceCreamName << "Colour : " << creams[j].IceCreamColour << "Cost : " << creams[j].IceCreamCost << '$'<<endl;
	}
}
void deleteCreamMenu(IceCream* creams, int& IceCreamCount, int& mID) // The function which specifies what exactly to delete
{
	int IceCreamID;
	cout << "Enter IceCream Id : ";
	cin >> IceCreamID;
	deleteIceCream(creams, IceCreamCount, IceCreamID);
}
void editCreamMenu(IceCream* creams, int& IceCreamCount) // The function which specifies what exactly to change
{
	int IceCreamID;
	cout << "Enter the IceCream ID you want to change : ";
	cin >> IceCreamID;
	IceCream IceCream = getIceCream(creams, IceCreamCount, IceCreamID);
	cout << "1. Name:" << endl;
	cout << "2. IceCreamFlavour:" << endl;
	cout << "3. IceCreamCost:" << endl;
	cout << "Type the Option with the thing you want to change : ";
	int CreamID;
	cin >> CreamID;
	switch (CreamID) // Using switch case to choose the thing we want to change
	{
	case 1:
		cout << " Name : ";
		cin >> IceCream.IceCreamName;
		updateIceCreamInfo(creams, IceCreamCount, IceCreamID, IceCream);
		break;
	case 2:
		cout << "Choose IceCreamFlavour : ";
		cin >> IceCream.IceCreamFlavour;
		updateIceCreamInfo(creams, IceCreamCount, IceCreamID, IceCream);
		break;
	case 3:
		cout << "Choose IceCreamCost : ";
		cin >> IceCream.IceCreamCost;
		updateIceCreamInfo(creams, IceCreamCount, IceCreamID, IceCream);
		break;
	default:
		cout << "Invalid input" << endl;
		break;
	}
}
bool showMenu(IceCream* creams, int& IceCreamCount, int& mID) //The function which shows the Menu to the user
{
	cout << " +++ MAIN MENU +++" << endl;
	cout << "1. Show all creams" << endl;
	cout << "2. Create an IceCream" << endl;
	cout << "3. Edit an IceCream" << endl;
	cout << "4. Delete an IceCream" << endl;
	cout << "5. Exit the program" << endl;
	int option;
	cin >> option;
	switch (option)
	{
	case 1:
		showCreamMenu(creams, IceCreamCount, mID); //The option which shows all things on the menu
		break;
	case 2:
		createCreamMenu(creams, IceCreamCount, mID); //The option which add new things to the menu
		break;
	case 3:
		editCreamMenu(creams, IceCreamCount); //The option which edits things already on the menu
		break;
	case 4:
		deleteCreamMenu(creams, IceCreamCount, mID); //The option which completely removes things on the menu
		break;
	case 5:
		return false;
	default: break;
	}
	return true;
}
int main()
{
	int IceCreamCount = 0;
	int mID = 1;
	IceCream creams[500];
	bool doShowCreamMenu;
	do 
	{
		doShowCreamMenu = showMenu(creams, IceCreamCount, mID);
	} 
	while (doShowCreamMenu);
}
